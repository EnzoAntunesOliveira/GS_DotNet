// <auto-generated />
using Gs_DotNet.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace Gs_DotNet.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Gs_DotNet.Domain.Entities.Cafeteira", b =>
                {
                    b.Property<int>("IdCafeteira")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCafeteira"));

                    b.Property<double>("CapacidadeAgua")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("CapsulasCompativeis")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<int>("EletrodomesticoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<double>("Pressao")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("Tecnologia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.HasKey("IdCafeteira");

                    b.HasIndex("EletrodomesticoId")
                        .IsUnique();

                    b.ToTable("Cafeteiras");
                });

            modelBuilder.Entity("Gs_DotNet.Domain.Entities.Eletrodomestico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("EficienciaEnergetica")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)");

                    b.Property<string>("LinkCompra")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<float>("Peso")
                        .HasColumnType("BINARY_FLOAT");

                    b.Property<string>("Voltagem")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.HasKey("Id");

                    b.ToTable("Eletrodomesticos");
                });

            modelBuilder.Entity("Gs_DotNet.Domain.Entities.Geladeira", b =>
                {
                    b.Property<int>("IdGeladeira")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGeladeira"));

                    b.Property<int>("CapacidadeFreezerLitros")
                        .HasColumnType("NUMBER(10)");

                    b.Property<double>("ConsumoKwh")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<int>("EletrodomesticoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("QuantidadePortas")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("TemPortaLatas")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("TipoDisplay")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.HasKey("IdGeladeira");

                    b.HasIndex("EletrodomesticoId")
                        .IsUnique();

                    b.ToTable("Geladeiras");
                });

            modelBuilder.Entity("Gs_DotNet.Domain.Entities.MaquinaLavar", b =>
                {
                    b.Property<int>("IdMaquina")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMaquina"));

                    b.Property<double>("CapacidadeKg")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double>("ConsumoAgua")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<int>("EletrodomesticoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("SistemaLavagem")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("TemAguaQuente")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("VelocidadeCentrifugacaoRpm")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("IdMaquina");

                    b.HasIndex("EletrodomesticoId")
                        .IsUnique();

                    b.ToTable("Lavadoras");
                });

            modelBuilder.Entity("Gs_DotNet.Domain.Entities.Microondas", b =>
                {
                    b.Property<int>("IdMicroondas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMicroondas"));

                    b.Property<double>("DiametroPrato")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<int>("EletrodomesticoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("Frequencia")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("PotenciaWatts")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("QuantidadeProgramas")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("TemDescongelamento")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("IdMicroondas");

                    b.HasIndex("EletrodomesticoId")
                        .IsUnique();

                    b.ToTable("Microondas");
                });

            modelBuilder.Entity("Gs_DotNet.Domain.Entities.Ventilador", b =>
                {
                    b.Property<int>("IdVentilador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVentilador"));

                    b.Property<int>("EletrodomesticoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("QuantidadePas")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("QuantidadeVelocidades")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("TemInclinacaoRegulavel")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("TipoVentilador")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.HasKey("IdVentilador");

                    b.HasIndex("EletrodomesticoId")
                        .IsUnique();

                    b.ToTable("Ventiladores");
                });

            modelBuilder.Entity("Gs_DotNet.Domain.Entities.Cafeteira", b =>
                {
                    b.HasOne("Gs_DotNet.Domain.Entities.Eletrodomestico", "Eletrodomestico")
                        .WithOne("Cafeteira")
                        .HasForeignKey("Gs_DotNet.Domain.Entities.Cafeteira", "EletrodomesticoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eletrodomestico");
                });

            modelBuilder.Entity("Gs_DotNet.Domain.Entities.Geladeira", b =>
                {
                    b.HasOne("Gs_DotNet.Domain.Entities.Eletrodomestico", "Eletrodomestico")
                        .WithOne("Geladeira")
                        .HasForeignKey("Gs_DotNet.Domain.Entities.Geladeira", "EletrodomesticoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eletrodomestico");
                });

            modelBuilder.Entity("Gs_DotNet.Domain.Entities.MaquinaLavar", b =>
                {
                    b.HasOne("Gs_DotNet.Domain.Entities.Eletrodomestico", "Eletrodomestico")
                        .WithOne("Lavadora")
                        .HasForeignKey("Gs_DotNet.Domain.Entities.MaquinaLavar", "EletrodomesticoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eletrodomestico");
                });

            modelBuilder.Entity("Gs_DotNet.Domain.Entities.Microondas", b =>
                {
                    b.HasOne("Gs_DotNet.Domain.Entities.Eletrodomestico", "Eletrodomestico")
                        .WithOne("Microondas")
                        .HasForeignKey("Gs_DotNet.Domain.Entities.Microondas", "EletrodomesticoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eletrodomestico");
                });

            modelBuilder.Entity("Gs_DotNet.Domain.Entities.Ventilador", b =>
                {
                    b.HasOne("Gs_DotNet.Domain.Entities.Eletrodomestico", "Eletrodomestico")
                        .WithOne("Ventilador")
                        .HasForeignKey("Gs_DotNet.Domain.Entities.Ventilador", "EletrodomesticoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eletrodomestico");
                });

            modelBuilder.Entity("Gs_DotNet.Domain.Entities.Eletrodomestico", b =>
                {
                    b.Navigation("Cafeteira")
                        .IsRequired();

                    b.Navigation("Geladeira")
                        .IsRequired();

                    b.Navigation("Lavadora")
                        .IsRequired();

                    b.Navigation("Microondas")
                        .IsRequired();

                    b.Navigation("Ventilador")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
